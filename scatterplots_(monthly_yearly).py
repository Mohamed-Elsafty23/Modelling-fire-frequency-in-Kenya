# -*- coding: utf-8 -*-
"""Scatterplots (monthly - yearly).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12zkgb8MzewJFWKvv7dPQvWDrx6SbrKYQ
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

path = '/content/fire_data_2000-18 (1).csv'
data = pd.read_csv(path)

data_00s = data[(data['year'] >= 2000) & (data['year'] <= 2009)].copy()
data_10s = data[(data['year'] >= 2010) & (data['year'] <= 2018)].copy()

def plot_temp_vs_fire(data_2000s, data_2010s):
    import os
    os.makedirs("our_output/plots", exist_ok=True)

    # Create figure & axes
    fig, ax = plt.subplots(figsize=(10, 6))
    sns.set(style="whitegrid")

    # 2000s era
    sns.scatterplot(
        data=data_2000s,
        x='mean_max_temp',
        y=np.log(data_2000s['count']),
        alpha=0.7,
        label='2000s Era',
        color='red',
        ax=ax
    )
    sns.regplot(
        data=data_2000s,
        x='mean_max_temp',
        y=np.log(data_2000s['count']),
        scatter=False,
        color='red',
        ax=ax
    )

    # 2010s era
    sns.scatterplot(
        data=data_2010s,
        x='mean_max_temp',
        y=np.log(data_2010s['count']),
        alpha=0.7,
        label='2010s Era',
        color='blue',
        ax=ax
    )
    sns.regplot(
        data=data_2010s,
        x='mean_max_temp',
        y=np.log(data_2010s['count']),
        scatter=False,
        color='blue',
        ax=ax
    )

    # Bold title and axis labels
    ax.set_title("Mean Maximum Temperature vs Fire Frequency by Era",
                 fontsize=14, fontweight='bold')
    ax.set_xlabel("Mean Maximum Temperature",
                  fontsize=12, fontweight='bold')
    ax.set_ylabel("Log(Fire Frequency)",
                  fontsize=12, fontweight='bold')

    # Bold tick labels
    for label in ax.get_xticklabels():
        label.set_fontweight('bold')
    for label in ax.get_yticklabels():
        label.set_fontweight('bold')

    ax.legend()
    plt.tight_layout()
    plt.savefig("our_output/plots/temp_vs_fire_frequency_by_era.png", dpi=300)
    plt.show()
    plt.close()


def plot_rainfall_vs_fire(data_2000s, data_2010s):
    import os
    os.makedirs("our_output/plots", exist_ok=True)

    # Create figure & axes
    fig, ax = plt.subplots(figsize=(10, 6))
    sns.set(style="whitegrid")

    # 2000s era
    sns.scatterplot(
        data=data_2000s,
        x='mean_rainfall',
        y=np.log(data_2000s['count']),
        alpha=0.7,
        label='2000s Era',
        color='red',
        ax=ax
    )
    sns.regplot(
        data=data_2000s,
        x='mean_rainfall',
        y=np.log(data_2000s['count']),
        scatter=False,
        color='red',
        ax=ax
    )

    # 2010s era
    sns.scatterplot(
        data=data_2010s,
        x='mean_rainfall',
        y=np.log(data_2010s['count']),
        alpha=0.7,
        label='2010s Era',
        color='blue',
        ax=ax
    )
    sns.regplot(
        data=data_2010s,
        x='mean_rainfall',
        y=np.log(data_2010s['count']),
        scatter=False,
        color='blue',
        ax=ax
    )

    # Bold title and axis labels
    ax.set_title("Rainfall vs Fire Frequency by Era",
                 fontsize=14, fontweight='bold')
    ax.set_xlabel("Rainfall",
                  fontsize=12, fontweight='bold')
    ax.set_ylabel("Log(Fire Frequency)",
                  fontsize=12, fontweight='bold')

    # Bold tick labels
    for label in ax.get_xticklabels():
        label.set_fontweight('bold')
    for label in ax.get_yticklabels():
        label.set_fontweight('bold')

    ax.legend()
    plt.tight_layout()
    plt.savefig("our_output/plots/rainfall_vs_fire_frequency_by_era.png", dpi=300)
    plt.show()
    plt.close()


# Call your plotting functions
plot_temp_vs_fire(data_00s, data_10s)
plot_rainfall_vs_fire(data_00s, data_10s)

def prepare_yearly_avg(data):
    return data.groupby('year').agg({
        'mean_max_temp': 'mean',
        'mean_rainfall': 'mean',
        'count': 'mean'
    }).reset_index()

# Prepare averaged datasets
avg_00s = prepare_yearly_avg(data_00s)
avg_10s = prepare_yearly_avg(data_10s)

def plot_temp_vs_fire(data_2000s, data_2010s):
    import os
    os.makedirs("our_output/plots", exist_ok=True)

    plt.figure(figsize=(10, 6))

    # 2000s
    sns.scatterplot(data=data_2000s, x='mean_max_temp', y=np.log(data_2000s['count']), alpha=0.7, label='2000s Avg', color='red')
    sns.regplot(data=data_2000s, x='mean_max_temp', y=np.log(data_2000s['count']), scatter=False, color='red')

    # 2010s
    sns.scatterplot(data=data_2010s, x='mean_max_temp', y=np.log(data_2010s['count']), alpha=0.7, label='2010s Avg', color='blue')
    sns.regplot(data=data_2010s, x='mean_max_temp', y=np.log(data_2010s['count']), scatter=False, color='blue')
    sns.set(style="whitegrid")

    plt.title("Yearly Avg Max Temperature vs Fire Frequency", fontweight='bold')
    plt.xlabel("Avg Max Temperature (per year)", fontweight='bold')
    plt.ylabel("Log(Fire Frequency, per year)", fontweight='bold')
    plt.xticks(fontweight='bold')
    plt.yticks(fontweight='bold')

    plt.legend()
    plt.tight_layout()
    plt.savefig("our_output/plots/yearly_avg_temp_vs_fire.png", dpi=300)
    plt.show()
    plt.close()

def plot_rainfall_vs_fire(data_2000s, data_2010s):
    import os
    os.makedirs("our_output/plots", exist_ok=True)

    plt.figure(figsize=(10, 6))

    # 2000s
    sns.scatterplot(data=data_2000s, x='mean_rainfall', y=np.log(data_2000s['count']), alpha=0.7, label='2000s Avg', color='red')
    sns.regplot(data=data_2000s, x='mean_rainfall', y=np.log(data_2000s['count']), scatter=False, color='red')

    # 2010s
    sns.scatterplot(data=data_2010s, x='mean_rainfall', y=np.log(data_2010s['count']), alpha=0.7, label='2010s Avg', color='blue')
    sns.regplot(data=data_2010s, x='mean_rainfall', y=np.log(data_2010s['count']), scatter=False, color='blue')
    sns.set(style="whitegrid")

    plt.title("Yearly Avg Rainfall vs Fire Frequency", fontweight='bold')
    plt.xlabel("Avg Rainfall (per year)", fontweight='bold')
    plt.ylabel("Log(Fire Frequency, per year)", fontweight='bold')
    plt.xticks(fontweight='bold')
    plt.yticks(fontweight='bold')

    plt.legend()
    plt.tight_layout()
    plt.savefig("our_output/plots/yearly_avg_rainfall_vs_fire.png", dpi=300)
    plt.show()
    plt.close()

# Run plots on the yearly averaged data
plot_temp_vs_fire(avg_00s, avg_10s)
plot_rainfall_vs_fire(avg_00s, avg_10s)